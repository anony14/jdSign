from Utils import *
def remain1(data):
    table = [[0, 1, 0, 1], [1, 0, 1, 0], [2, 3, 1, 0], [3, 6, 1, 0], [4, 7, 1, 0], [5, 5, 1, 0], [6, 2, 1, 0], [7, 4, 0, 1]]
    arr = toBit(data)
    size = len(arr)
    arr1 = [0 for i in range(size)]
    for i in range(size):
        if arr[i] == 0:
            arr1[table[i][1]] = table[i][2]
        else:
            arr1[table[i][1]] = table[i][3]
    return toBytes(arr1)

def remain2(data):
    table = [[0, 7, 0, 1], [1, 6, 1, 0], [2, 11, 1, 0], [3, 13, 1, 0], [4, 14, 1, 0], [5, 8, 1, 0], [6, 4, 1, 0], [7, 10, 1, 0], 
             [8, 1, 1, 0], [9, 12, 1, 0], [10, 2, 1, 0], [11, 9, 1, 0], [12, 5, 0, 1], [13, 3, 0, 1], [14, 15, 1, 0], [15, 0, 0, 1]]
    arr = toBit(data)
    size = len(arr)
    arr1 = [0 for i in range(size)]
    for i in range(size):
        if arr[i] == 0:
            arr1[table[i][1]] = table[i][2]
        else:
            arr1[table[i][1]] = table[i][3]
    return toBytes(arr1)

def remain3(data):
    table = [[0, 11, 1, 0], [1, 2, 0, 1], [2, 17, 1, 0], [3, 10, 1, 0], [4, 7, 1, 0], [5, 6, 1, 0], [6, 14, 1, 0], [7, 12, 0, 1], 
             [8, 16, 0, 1], [9, 4, 1, 0], [10, 23, 1, 0], [11, 5, 1, 0], [12, 18, 0, 1], [13, 1, 0, 1], [14, 0, 1, 0], [15, 22, 0, 1], 
             [16, 3, 0, 1], [17, 21, 1, 0], [18, 15, 1, 0], [19, 19, 1, 0], [20, 20, 0, 1], [21, 13, 1, 0], [22, 9, 0, 1], [23, 8, 0, 1]]
    arr = toBit(data)
    size = len(arr)
    arr1 = [0 for i in range(size)]
    for i in range(size):
        if arr[i] == 0:
            arr1[table[i][1]] = table[i][2]
        else:
            arr1[table[i][1]] = table[i][3]
    return toBytes(arr1)

def remain4(data):
    table = [[0, 18, 0, 1], [1, 29, 0, 1], [2, 4, 0, 1], [3, 21, 1, 0], [4, 28, 0, 1], [5, 20, 1, 0], [6, 3, 1, 0], [7, 13, 1, 0], 
             [8, 2, 0, 1], [9, 14, 1, 0], [10, 31, 0, 1], [11, 8, 1, 0], [12, 0, 0, 1], [13, 16, 1, 0], [14, 23, 0, 1], [15, 5, 0, 1], 
             [16, 11, 0, 1], [17, 17, 1, 0], [18, 10, 1, 0], [19, 24, 0, 1], [20, 22, 0, 1], [21, 27, 1, 0], [22, 26, 1, 0], [23, 7, 0, 1], 
             [24, 25, 1, 0], [25, 6, 1, 0], [26, 9, 1, 0], [27, 30, 0, 1], [28, 19, 0, 1], [29, 12, 1, 0], [30, 1, 0, 1], [31, 15, 1, 0]]
    arr = toBit(data)
    size = len(arr)
    arr1 = [0 for i in range(size)]
    for i in range(size):
        if arr[i] == 0:
            arr1[table[i][1]] = table[i][2]
        else:
            arr1[table[i][1]] = table[i][3]
    return toBytes(arr1)

def remain5(data):
    table = [[0, 29, 1, 0], [1, 0, 1, 0], [2, 9, 0, 1], [3, 16, 0, 1], [4, 12, 0, 1], [5, 20, 1, 0], [6, 22, 1, 0], [7, 38, 0, 1], 
             [8, 39, 0, 1], [9, 5, 1, 0], [10, 32, 0, 1], [11, 13, 1, 0], [12, 23, 1, 0], [13, 8, 0, 1], [14, 1, 1, 0], [15, 4, 1, 0], 
             [16, 7, 0, 1], [17, 34, 1, 0], [18, 28, 0, 1], [19, 3, 1, 0], [20, 2, 1, 0], [21, 6, 0, 1], [22, 31, 0, 1], [23, 11, 1, 0], 
             [24, 37, 1, 0], [25, 25, 1, 0], [26, 36, 1, 0], [27, 33, 1, 0], [28, 17, 1, 0], [29, 26, 0, 1], [30, 30, 0, 1], [31, 15, 1, 0], 
             [32, 10, 0, 1], [33, 21, 1, 0], [34, 19, 0, 1], [35, 18, 0, 1], [36, 27, 1, 0], [37, 35, 0, 1], [38, 24, 0, 1], [39, 14, 1, 0]]
    arr = toBit(data)
    size = len(arr)
    arr1 = [0 for i in range(size)]
    for i in range(size):
        if arr[i] == 0:
            arr1[table[i][1]] = table[i][2]
        else:
            arr1[table[i][1]] = table[i][3]
    return toBytes(arr1)

def remain6(data):
    table = [[0, 46, 0, 1], [1, 29, 1, 0], [2, 43, 1, 0], [3, 42, 0, 1], [4, 45, 0, 1], [5, 20, 1, 0], [6, 9, 0, 1], [7, 7, 0, 1], 
             [8, 0, 1, 0], [9, 11, 1, 0], [10, 22, 0, 1], [11, 15, 1, 0], [12, 35, 1, 0], [13, 8, 0, 1], [14, 25, 0, 1], [15, 2, 1, 0], 
             [16, 39, 1, 0], [17, 30, 0, 1], [18, 18, 1, 0], [19, 34, 0, 1], [20, 32, 1, 0], [21, 6, 0, 1], [22, 31, 0, 1], [23, 36, 1, 0], 
             [24, 44, 1, 0], [25, 14, 0, 1], [26, 37, 0, 1], [27, 28, 1, 0], [28, 16, 1, 0], [29, 19, 1, 0], [30, 24, 1, 0], [31, 4, 0, 1], 
             [32, 13, 1, 0], [33, 3, 0, 1], [34, 40, 0, 1], [35, 27, 0, 1], [36, 10, 0, 1], [37, 21, 1, 0], [38, 23, 1, 0], [39, 26, 1, 0], 
             [40, 17, 0, 1], [41, 38, 1, 0], [42, 33, 1, 0], [43, 5, 1, 0], [44, 41, 1, 0], [45, 47, 0, 1], [46, 12, 1, 0], [47, 1, 0, 1]]
    arr = toBit(data)
    size = len(arr)
    arr1 = [0 for i in range(size)]
    for i in range(size):
        if arr[i] == 0:
            arr1[table[i][1]] = table[i][2]
        else:
            arr1[table[i][1]] = table[i][3]
    return toBytes(arr1)

def remain7(data):
    table = [[0, 46, 0, 1], [1, 29, 0, 1], [2, 15, 0, 1], [3, 34, 1, 0], [4, 36, 1, 0], [5, 52, 0, 1], [6, 19, 1, 0], [7, 37, 1, 0], 
             [8, 33, 1, 0], [9, 11, 1, 0], [10, 9, 1, 0], [11, 45, 0, 1], [12, 35, 1, 0], [13, 2, 0, 1], [14, 43, 0, 1], [15, 22, 1, 0], 
             [16, 53, 0, 1], [17, 23, 1, 0], [18, 0, 1, 0], [19, 27, 0, 1], [20, 32, 1, 0], [21, 8, 1, 0], [22, 5, 1, 0], [23, 48, 1, 0], 
             [24, 20, 1, 0], [25, 6, 0, 1], [26, 42, 0, 1], [27, 28, 1, 0], [28, 26, 1, 0], [29, 14, 0, 1], [30, 31, 0, 1], [31, 4, 0, 1], 
             [32, 18, 0, 1], [33, 3, 1, 0], [34, 50, 1, 0], [35, 24, 0, 1], [36, 7, 0, 1], [37, 21, 1, 0], [38, 55, 1, 0], [39, 44, 0, 1], 
             [40, 17, 0, 1], [41, 51, 1, 0], [42, 25, 1, 0], [43, 39, 0, 1], [44, 41, 0, 1], [45, 40, 1, 0], [46, 12, 1, 0], [47, 16, 1, 0], 
             [48, 13, 0, 1], [49, 30, 0, 1], [50, 1, 1, 0], [51, 54, 0, 1], [52, 38, 1, 0], [53, 47, 1, 0], [54, 10, 1, 0], [55, 49, 1, 0]]
    arr = toBit(data)
    size = len(arr)
    arr1 = [0 for i in range(size)]
    for i in range(size):
        if arr[i] == 0:
            arr1[table[i][1]] = table[i][2]
        else:
            arr1[table[i][1]] = table[i][3]
    return toBytes(arr1)

def TenMagic16_enc(input):
    table = [[0, 12], [1, 62], [2, 19], [3, 48], [4, 13], [5, 40], [6, 30], [7, 49], [8, 31], [9, 24], [10, 45], 
             [11, 61], [12, 51], [13, 4], [14, 28], [15, 3], [16, 7], [17, 58], [18, 53], [19, 1], [20, 36], 
             [21, 21], [22, 22], [23, 39], [24, 54], [25, 25], [26, 26], [27, 6], [28, 52], [29, 10], [30, 5], 
             [31, 50], [32, 8], [33, 46], [34, 17], [35, 16], [36, 9], [37, 37], [38, 38], [39, 57], [40, 20], 
             [41, 41], [42, 42], [43, 23], [44, 11], [45, 34], [46, 29], [47, 44], [48, 15], [49, 14], [50, 2], 
             [51, 60], [52, 47], [53, 43], [54, 18], [55, 35], [56, 32], [57, 27], [58, 33], [59, 55], [60, 63], 
             [61, 56], [62, 59], [63, 0]]
    arr = input
    arr1 = [0 for i in range(len(arr))]
    for i in range(len(table)):
        arr1[table[i][1]] = arr[table[i][0]]
    return toBytes(arr1)


def TenMagic16(data, data_len):
    print("TenMagic16")
    key = "7d0069660c9b5d32074facf37c3738a1"
    
    split_num = data_len // 8
    remain = data_len % 8 
    result = b""
    for i in range(split_num):
        data_bit = toBit(data[8*i : 8*i + 8])
        result += TenMagic16_enc(data_bit)
    switcher = {
        1: remain1,
        2: remain2,
        3: remain3,
        4: remain4,
        5: remain5,
        6: remain6,
        7: remain7
    } 
    result += switcher[remain](data[split_num*8:])
    
    return result